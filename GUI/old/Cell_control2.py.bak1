#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Feb 17, 2020 01:49:31 PM CET  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import Cell_control2_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    Cell_control2_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    Cell_control2_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font9 = "-family {Segoe UI} -size 14 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("600x450+650+150")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1, 1)
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.117, rely=0.0, height=31, width=75)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font=font9)
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Shutters''')

        self.Label1_1 = tk.Label(top)
        self.Label1_1.place(relx=0.4, rely=0.0, height=31, width=135)
        self.Label1_1.configure(activebackground="#f9f9f9")
        self.Label1_1.configure(activeforeground="black")
        self.Label1_1.configure(background="#d9d9d9")
        self.Label1_1.configure(disabledforeground="#a3a3a3")
        self.Label1_1.configure(font="-family {Segoe UI} -size 14")
        self.Label1_1.configure(foreground="#000000")
        self.Label1_1.configure(highlightbackground="#d9d9d9")
        self.Label1_1.configure(highlightcolor="black")
        self.Label1_1.configure(text='''Temperatures''')

        self.S1_open = tk.Button(top)
        self.S1_open.place(relx=0.117, rely=0.133, height=34, width=40)
        self.S1_open.configure(activebackground="#ececec")
        self.S1_open.configure(activeforeground="#000000")
        self.S1_open.configure(background="#5f5f5f")
        self.S1_open.configure(command=Cell_control2_support.OpenS1)
        self.S1_open.configure(cursor="fleur")
        self.S1_open.configure(disabledforeground="#a3a3a3")
        self.S1_open.configure(foreground="#000000")
        self.S1_open.configure(highlightbackground="#d9d9d9")
        self.S1_open.configure(highlightcolor="black")
        self.S1_open.configure(pady="0")
        self.S1_open.configure(text='''Open''')

        self.S1_close = tk.Button(top)
        self.S1_close.place(relx=0.2, rely=0.133, height=34, width=40)
        self.S1_close.configure(activebackground="#ececec")
        self.S1_close.configure(activeforeground="#000000")
        self.S1_close.configure(background="#5f5f5f")
        self.S1_close.configure(command=Cell_control2_support.CloseS1)
        self.S1_close.configure(disabledforeground="#a3a3a3")
        self.S1_close.configure(foreground="#000000")
        self.S1_close.configure(highlightbackground="#d9d9d9")
        self.S1_close.configure(highlightcolor="black")
        self.S1_close.configure(pady="0")
        self.S1_close.configure(text='''Close''')

        self.S2_open = tk.Button(top)
        self.S2_open.place(relx=0.117, rely=0.267, height=34, width=40)
        self.S2_open.configure(activebackground="#ececec")
        self.S2_open.configure(activeforeground="#000000")
        self.S2_open.configure(background="#5f5f5f")
        self.S2_open.configure(command=Cell_control2_support.OpenS2)
        self.S2_open.configure(disabledforeground="#a3a3a3")
        self.S2_open.configure(foreground="#000000")
        self.S2_open.configure(highlightbackground="#d9d9d9")
        self.S2_open.configure(highlightcolor="black")
        self.S2_open.configure(pady="0")
        self.S2_open.configure(text='''Open''')

        self.S2_close = tk.Button(top)
        self.S2_close.place(relx=0.2, rely=0.267, height=34, width=40)
        self.S2_close.configure(activebackground="#ececec")
        self.S2_close.configure(activeforeground="#000000")
        self.S2_close.configure(background="#5f5f5f")
        self.S2_close.configure(command=Cell_control2_support.CloseS2)
        self.S2_close.configure(disabledforeground="#a3a3a3")
        self.S2_close.configure(foreground="#000000")
        self.S2_close.configure(highlightbackground="#d9d9d9")
        self.S2_close.configure(highlightcolor="black")
        self.S2_close.configure(pady="0")
        self.S2_close.configure(text='''Close''')

        self.S2_1 = tk.Button(top)
        self.S2_1.place(relx=0.117, rely=0.378, height=24, width=20)
        self.S2_1.configure(activebackground="#ececec")
        self.S2_1.configure(activeforeground="#000000")
        self.S2_1.configure(background="#5f5f5f")
        self.S2_1.configure(command=Cell_control2_support.Shutter2Pos1)
        self.S2_1.configure(disabledforeground="#a3a3a3")
        self.S2_1.configure(foreground="#000000")
        self.S2_1.configure(highlightbackground="#d9d9d9")
        self.S2_1.configure(highlightcolor="black")
        self.S2_1.configure(pady="0")
        self.S2_1.configure(text='''1''')

        self.S2_2 = tk.Button(top)
        self.S2_2.place(relx=0.15, rely=0.378, height=24, width=20)
        self.S2_2.configure(activebackground="#ececec")
        self.S2_2.configure(activeforeground="#000000")
        self.S2_2.configure(background="#5f5f5f")
        self.S2_2.configure(command=Cell_control2_support.Shutter2Pos2)
        self.S2_2.configure(disabledforeground="#a3a3a3")
        self.S2_2.configure(foreground="#000000")
        self.S2_2.configure(highlightbackground="#d9d9d9")
        self.S2_2.configure(highlightcolor="black")
        self.S2_2.configure(pady="0")
        self.S2_2.configure(text='''2''')

        self.S2_3 = tk.Button(top)
        self.S2_3.place(relx=0.183, rely=0.378, height=24, width=20)
        self.S2_3.configure(activebackground="#ececec")
        self.S2_3.configure(activeforeground="#000000")
        self.S2_3.configure(background="#5f5f5f")
        self.S2_3.configure(command=Cell_control2_support.Shutter2Pos3)
        self.S2_3.configure(disabledforeground="#a3a3a3")
        self.S2_3.configure(foreground="#000000")
        self.S2_3.configure(highlightbackground="#d9d9d9")
        self.S2_3.configure(highlightcolor="black")
        self.S2_3.configure(pady="0")
        self.S2_3.configure(text='''3''')

        self.S2_4 = tk.Button(top)
        self.S2_4.place(relx=0.217, rely=0.378, height=24, width=20)
        self.S2_4.configure(activebackground="#ececec")
        self.S2_4.configure(activeforeground="#000000")
        self.S2_4.configure(background="#5f5f5f")
        self.S2_4.configure(command=Cell_control2_support.shutter2Pos4)
        self.S2_4.configure(disabledforeground="#a3a3a3")
        self.S2_4.configure(foreground="#000000")
        self.S2_4.configure(highlightbackground="#d9d9d9")
        self.S2_4.configure(highlightcolor="black")
        self.S2_4.configure(pady="0")
        self.S2_4.configure(text='''4''')

        self.T1_read = tk.Text(top)
        self.T1_read.place(relx=0.417, rely=0.156, relheight=0.053
                , relwidth=0.107)
        self.T1_read.configure(background="white")
        self.T1_read.configure(cursor="fleur")
        self.T1_read.configure(font="TkTextFont")
        self.T1_read.configure(foreground="black")
        self.T1_read.configure(highlightbackground="#d9d9d9")
        self.T1_read.configure(highlightcolor="black")
        self.T1_read.configure(insertbackground="black")
        self.T1_read.configure(selectbackground="#c4c4c4")
        self.T1_read.configure(selectforeground="black")
        self.T1_read.configure(wrap="word")

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.417, rely=0.089, height=21, width=39)
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''T read''')

        self.Label2_7 = tk.Label(top)
        self.Label2_7.place(relx=0.55, rely=0.089, height=21, width=39)
        self.Label2_7.configure(activebackground="#f9f9f9")
        self.Label2_7.configure(activeforeground="black")
        self.Label2_7.configure(background="#d9d9d9")
        self.Label2_7.configure(disabledforeground="#a3a3a3")
        self.Label2_7.configure(foreground="#000000")
        self.Label2_7.configure(highlightbackground="#d9d9d9")
        self.Label2_7.configure(highlightcolor="black")
        self.Label2_7.configure(text='''T set''')

        self.T1_set = tk.Text(top)
        self.T1_set.place(relx=0.55, rely=0.156, relheight=0.053, relwidth=0.107)

        self.T1_set.configure(background="white")
        self.T1_set.configure(font="TkTextFont")
        self.T1_set.configure(foreground="black")
        self.T1_set.configure(highlightbackground="#d9d9d9")
        self.T1_set.configure(highlightcolor="black")
        self.T1_set.configure(insertbackground="black")
        self.T1_set.configure(selectbackground="#c4c4c4")
        self.T1_set.configure(selectforeground="black")
        self.T1_set.configure(wrap="word")

        self.SetT1 = tk.Button(top)
        self.SetT1.place(relx=0.683, rely=0.156, height=24, width=50)
        self.SetT1.configure(activebackground="#ececec")
        self.SetT1.configure(activeforeground="#000000")
        self.SetT1.configure(background="#5f5f5f")
        self.SetT1.configure(command=Cell_control2_support.SetT1)
        self.SetT1.configure(cursor="fleur")
        self.SetT1.configure(disabledforeground="#a3a3a3")
        self.SetT1.configure(foreground="#000000")
        self.SetT1.configure(highlightbackground="#d9d9d9")
        self.SetT1.configure(highlightcolor="black")
        self.SetT1.configure(pady="0")
        self.SetT1.configure(text='''set''')

        self.T2_1_read = tk.Text(top)
        self.T2_1_read.place(relx=0.417, rely=0.289, relheight=0.053
                , relwidth=0.107)
        self.T2_1_read.configure(background="white")
        self.T2_1_read.configure(font="TkTextFont")
        self.T2_1_read.configure(foreground="black")
        self.T2_1_read.configure(highlightbackground="#d9d9d9")
        self.T2_1_read.configure(highlightcolor="black")
        self.T2_1_read.configure(insertbackground="black")
        self.T2_1_read.configure(selectbackground="#c4c4c4")
        self.T2_1_read.configure(selectforeground="black")
        self.T2_1_read.configure(wrap="word")

        self.T2_1_set = tk.Text(top)
        self.T2_1_set.place(relx=0.55, rely=0.289, relheight=0.053
                , relwidth=0.107)
        self.T2_1_set.configure(background="white")
        self.T2_1_set.configure(font="TkTextFont")
        self.T2_1_set.configure(foreground="black")
        self.T2_1_set.configure(highlightbackground="#d9d9d9")
        self.T2_1_set.configure(highlightcolor="black")
        self.T2_1_set.configure(insertbackground="black")
        self.T2_1_set.configure(selectbackground="#c4c4c4")
        self.T2_1_set.configure(selectforeground="black")
        self.T2_1_set.configure(wrap="word")

        self.T2_2_read = tk.Text(top)
        self.T2_2_read.place(relx=0.417, rely=0.378, relheight=0.053
                , relwidth=0.107)
        self.T2_2_read.configure(background="white")
        self.T2_2_read.configure(font="TkTextFont")
        self.T2_2_read.configure(foreground="black")
        self.T2_2_read.configure(highlightbackground="#d9d9d9")
        self.T2_2_read.configure(highlightcolor="black")
        self.T2_2_read.configure(insertbackground="black")
        self.T2_2_read.configure(selectbackground="#c4c4c4")
        self.T2_2_read.configure(selectforeground="black")
        self.T2_2_read.configure(wrap="word")

        self.T2_2_set = tk.Text(top)
        self.T2_2_set.place(relx=0.55, rely=0.378, relheight=0.053
                , relwidth=0.107)
        self.T2_2_set.configure(background="white")
        self.T2_2_set.configure(font="TkTextFont")
        self.T2_2_set.configure(foreground="black")
        self.T2_2_set.configure(highlightbackground="#d9d9d9")
        self.T2_2_set.configure(highlightcolor="black")
        self.T2_2_set.configure(insertbackground="black")
        self.T2_2_set.configure(selectbackground="#c4c4c4")
        self.T2_2_set.configure(selectforeground="black")
        self.T2_2_set.configure(wrap="word")

        self.SetT2_1 = tk.Button(top)
        self.SetT2_1.place(relx=0.683, rely=0.289, height=24, width=50)
        self.SetT2_1.configure(activebackground="#ececec")
        self.SetT2_1.configure(activeforeground="#000000")
        self.SetT2_1.configure(background="#5f5f5f")
        self.SetT2_1.configure(command=Cell_control2_support.SetT2_1)
        self.SetT2_1.configure(disabledforeground="#a3a3a3")
        self.SetT2_1.configure(foreground="#000000")
        self.SetT2_1.configure(highlightbackground="#d9d9d9")
        self.SetT2_1.configure(highlightcolor="black")
        self.SetT2_1.configure(pady="0")
        self.SetT2_1.configure(text='''set''')

        self.SetT2_2 = tk.Button(top)
        self.SetT2_2.place(relx=0.683, rely=0.378, height=24, width=50)
        self.SetT2_2.configure(activebackground="#ececec")
        self.SetT2_2.configure(activeforeground="#000000")
        self.SetT2_2.configure(background="#5f5f5f")
        self.SetT2_2.configure(command=Cell_control2_support.SetT2_2)
        self.SetT2_2.configure(disabledforeground="#a3a3a3")
        self.SetT2_2.configure(foreground="#000000")
        self.SetT2_2.configure(highlightbackground="#d9d9d9")
        self.SetT2_2.configure(highlightcolor="black")
        self.SetT2_2.configure(pady="0")
        self.SetT2_2.configure(text='''set''')

        self.TSeparator1 = ttk.Separator(top)
        self.TSeparator1.place(relx=0.1, rely=0.24, relwidth=0.7)

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.117, rely=0.533, height=21, width=105)
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(text='''Growth Programm''')

        self.TSeparator2 = ttk.Separator(top)
        self.TSeparator2.place(relx=0.1, rely=0.476, relwidth=0.7)

        self.GrowthDisplay = ScrolledText(top)
        self.GrowthDisplay.place(relx=0.1, rely=0.644, relheight=0.291
                , relwidth=0.618)
        self.GrowthDisplay.configure(background="white")
        self.GrowthDisplay.configure(font="TkTextFont")
        self.GrowthDisplay.configure(foreground="black")
        self.GrowthDisplay.configure(highlightbackground="#d9d9d9")
        self.GrowthDisplay.configure(highlightcolor="black")
        self.GrowthDisplay.configure(insertbackground="black")
        self.GrowthDisplay.configure(insertborderwidth="3")
        self.GrowthDisplay.configure(selectbackground="#c4c4c4")
        self.GrowthDisplay.configure(selectforeground="black")
        self.GrowthDisplay.configure(wrap="none")

        self.Growthpath = tk.Text(top)
        self.Growthpath.place(relx=0.35, rely=0.533, relheight=0.053
                , relwidth=0.273)
        self.Growthpath.configure(background="white")
        self.Growthpath.configure(font="TkTextFont")
        self.Growthpath.configure(foreground="black")
        self.Growthpath.configure(highlightbackground="#d9d9d9")
        self.Growthpath.configure(highlightcolor="black")
        self.Growthpath.configure(insertbackground="black")
        self.Growthpath.configure(selectbackground="#c4c4c4")
        self.Growthpath.configure(selectforeground="black")
        self.Growthpath.configure(wrap="word")

        self.getGrowthpath = tk.Button(top)
        self.getGrowthpath.place(relx=0.65, rely=0.533, height=24, width=50)
        self.getGrowthpath.configure(activebackground="#ececec")
        self.getGrowthpath.configure(activeforeground="#000000")
        self.getGrowthpath.configure(background="#5f5f5f")
        self.getGrowthpath.configure(command=Cell_control2_support.getPath)
        self.getGrowthpath.configure(disabledforeground="#a3a3a3")
        self.getGrowthpath.configure(foreground="#000000")
        self.getGrowthpath.configure(highlightbackground="#d9d9d9")
        self.getGrowthpath.configure(highlightcolor="black")
        self.getGrowthpath.configure(pady="0")
        self.getGrowthpath.configure(text='''path''')

        self.LoadProg = tk.Button(top)
        self.LoadProg.place(relx=0.75, rely=0.533, height=24, width=50)
        self.LoadProg.configure(activebackground="#ececec")
        self.LoadProg.configure(activeforeground="#000000")
        self.LoadProg.configure(background="#5f5f5f")
        self.LoadProg.configure(command=Cell_control2_support.LoadProgram)
        self.LoadProg.configure(disabledforeground="#a3a3a3")
        self.LoadProg.configure(foreground="#000000")
        self.LoadProg.configure(highlightbackground="#d9d9d9")
        self.LoadProg.configure(highlightcolor="black")
        self.LoadProg.configure(pady="0")
        self.LoadProg.configure(text='''load''')

        self.Rungrowth = tk.Button(top)
        self.Rungrowth.place(relx=0.733, rely=0.644, height=24, width=50)
        self.Rungrowth.configure(activebackground="#ececec")
        self.Rungrowth.configure(activeforeground="#000000")
        self.Rungrowth.configure(background="#5f5f5f")
        self.Rungrowth.configure(command=Cell_control2_support.RunProgram)
        self.Rungrowth.configure(disabledforeground="#a3a3a3")
        self.Rungrowth.configure(foreground="#000000")
        self.Rungrowth.configure(highlightbackground="#d9d9d9")
        self.Rungrowth.configure(highlightcolor="black")
        self.Rungrowth.configure(pady="0")
        self.Rungrowth.configure(text='''run''')

        self.pauseProg = tk.Button(top)
        self.pauseProg.place(relx=0.733, rely=0.711, height=24, width=50)
        self.pauseProg.configure(activebackground="#ececec")
        self.pauseProg.configure(activeforeground="#000000")
        self.pauseProg.configure(background="#5f5f5f")
        self.pauseProg.configure(command=Cell_control2_support.PauseProgram)
        self.pauseProg.configure(disabledforeground="#a3a3a3")
        self.pauseProg.configure(foreground="#000000")
        self.pauseProg.configure(highlightbackground="#d9d9d9")
        self.pauseProg.configure(highlightcolor="black")
        self.pauseProg.configure(pady="0")
        self.pauseProg.configure(text='''pause''')

        self.AbortProg = tk.Button(top)
        self.AbortProg.place(relx=0.733, rely=0.778, height=24, width=50)
        self.AbortProg.configure(activebackground="#ececec")
        self.AbortProg.configure(activeforeground="#000000")
        self.AbortProg.configure(background="#5f5f5f")
        self.AbortProg.configure(command=Cell_control2_support.AbortProgram)
        self.AbortProg.configure(disabledforeground="#a3a3a3")
        self.AbortProg.configure(foreground="#000000")
        self.AbortProg.configure(highlightbackground="#d9d9d9")
        self.AbortProg.configure(highlightcolor="black")
        self.AbortProg.configure(pady="0")
        self.AbortProg.configure(text='''abort''')

        self.Menu = tk.Button(top)
        self.Menu.place(relx=0.733, rely=0.889, height=34, width=130)
        self.Menu.configure(activebackground="#ececec")
        self.Menu.configure(activeforeground="#000000")
        self.Menu.configure(background="#5f5f5f")
        self.Menu.configure(command=Cell_control2_support.CallMenu)
        self.Menu.configure(disabledforeground="#a3a3a3")
        self.Menu.configure(foreground="#000000")
        self.Menu.configure(highlightbackground="#d9d9d9")
        self.Menu.configure(highlightcolor="black")
        self.Menu.configure(pady="0")
        self.Menu.configure(text='''Menu''')

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=0.317, rely=0.156, height=21, width=33)
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(text='''open''')

        self.Label4_13 = tk.Label(top)
        self.Label4_13.place(relx=0.317, rely=0.289, height=21, width=33)
        self.Label4_13.configure(activebackground="#f9f9f9")
        self.Label4_13.configure(activeforeground="black")
        self.Label4_13.configure(background="#d9d9d9")
        self.Label4_13.configure(disabledforeground="#a3a3a3")
        self.Label4_13.configure(foreground="#000000")
        self.Label4_13.configure(highlightbackground="#d9d9d9")
        self.Label4_13.configure(highlightcolor="black")
        self.Label4_13.configure(text='''closed''')

        self.Statuschecker = tk.Button(top)
        self.Statuschecker.place(relx=0.95, rely=0.022, height=24, width=20)
        self.Statuschecker.configure(activebackground="#ececec")
        self.Statuschecker.configure(activeforeground="#000000")
        self.Statuschecker.configure(background="#5f5f5f")
        self.Statuschecker.configure(command=Cell_control2_support.CheckStatus)
        self.Statuschecker.configure(disabledforeground="#a3a3a3")
        self.Statuschecker.configure(foreground="#000000")
        self.Statuschecker.configure(highlightbackground="#d9d9d9")
        self.Statuschecker.configure(highlightcolor="black")
        self.Statuschecker.configure(pady="0")
        self.Statuschecker.configure(text='''<>''')

        self.Label5 = tk.Label(top)
        self.Label5.place(relx=0.867, rely=0.111, height=21, width=38)
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(text='''Status''')

        self.Label5_15 = tk.Label(top)
        self.Label5_15.place(relx=0.933, rely=0.111, height=21, width=38)
        self.Label5_15.configure(activebackground="#f9f9f9")
        self.Label5_15.configure(activeforeground="black")
        self.Label5_15.configure(background="#d9d9d9")
        self.Label5_15.configure(disabledforeground="#a3a3a3")
        self.Label5_15.configure(foreground="#000000")
        self.Label5_15.configure(highlightbackground="#d9d9d9")
        self.Label5_15.configure(highlightcolor="black")
        self.Label5_15.configure(text='''ok''')

# The following code is added to facilitate the Scrolled widgets you specified.
class AutoScroll(object):
    '''Configure the scrollbars for a widget.'''

    def __init__(self, master):
        #  Rozen. Added the try-except clauses so that this class
        #  could be used for scrolled entry widget for which vertical
        #  scrolling is not supported. 5/7/14.
        try:
            vsb = ttk.Scrollbar(master, orient='vertical', command=self.yview)
        except:
            pass
        hsb = ttk.Scrollbar(master, orient='horizontal', command=self.xview)

        #self.configure(yscrollcommand=_autoscroll(vsb),
        #    xscrollcommand=_autoscroll(hsb))
        try:
            self.configure(yscrollcommand=self._autoscroll(vsb))
        except:
            pass
        self.configure(xscrollcommand=self._autoscroll(hsb))

        self.grid(column=0, row=0, sticky='nsew')
        try:
            vsb.grid(column=1, row=0, sticky='ns')
        except:
            pass
        hsb.grid(column=0, row=1, sticky='ew')

        master.grid_columnconfigure(0, weight=1)
        master.grid_rowconfigure(0, weight=1)

        # Copy geometry methods of master  (taken from ScrolledText.py)
        if py3:
            methods = tk.Pack.__dict__.keys() | tk.Grid.__dict__.keys() \
                  | tk.Place.__dict__.keys()
        else:
            methods = tk.Pack.__dict__.keys() + tk.Grid.__dict__.keys() \
                  + tk.Place.__dict__.keys()

        for meth in methods:
            if meth[0] != '_' and meth not in ('config', 'configure'):
                setattr(self, meth, getattr(master, meth))

    @staticmethod
    def _autoscroll(sbar):
        '''Hide and show scrollbar as needed.'''
        def wrapped(first, last):
            first, last = float(first), float(last)
            if first <= 0 and last >= 1:
                sbar.grid_remove()
            else:
                sbar.grid()
            sbar.set(first, last)
        return wrapped

    def __str__(self):
        return str(self.master)

def _create_container(func):
    '''Creates a ttk Frame with a given master, and use this new frame to
    place the scrollbars and the widget.'''
    def wrapped(cls, master, **kw):
        container = ttk.Frame(master)
        container.bind('<Enter>', lambda e: _bound_to_mousewheel(e, container))
        container.bind('<Leave>', lambda e: _unbound_to_mousewheel(e, container))
        return func(cls, container, **kw)
    return wrapped

class ScrolledText(AutoScroll, tk.Text):
    '''A standard Tkinter Text widget with scrollbars that will
    automatically show/hide as needed.'''
    @_create_container
    def __init__(self, master, **kw):
        tk.Text.__init__(self, master, **kw)
        AutoScroll.__init__(self, master)

import platform
def _bound_to_mousewheel(event, widget):
    child = widget.winfo_children()[0]
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        child.bind_all('<MouseWheel>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-MouseWheel>', lambda e: _on_shiftmouse(e, child))
    else:
        child.bind_all('<Button-4>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Button-5>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-Button-4>', lambda e: _on_shiftmouse(e, child))
        child.bind_all('<Shift-Button-5>', lambda e: _on_shiftmouse(e, child))

def _unbound_to_mousewheel(event, widget):
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        widget.unbind_all('<MouseWheel>')
        widget.unbind_all('<Shift-MouseWheel>')
    else:
        widget.unbind_all('<Button-4>')
        widget.unbind_all('<Button-5>')
        widget.unbind_all('<Shift-Button-4>')
        widget.unbind_all('<Shift-Button-5>')

def _on_mousewheel(event, widget):
    if platform.system() == 'Windows':
        widget.yview_scroll(-1*int(event.delta/120),'units')
    elif platform.system() == 'Darwin':
        widget.yview_scroll(-1*int(event.delta),'units')
    else:
        if event.num == 4:
            widget.yview_scroll(-1, 'units')
        elif event.num == 5:
            widget.yview_scroll(1, 'units')

def _on_shiftmouse(event, widget):
    if platform.system() == 'Windows':
        widget.xview_scroll(-1*int(event.delta/120), 'units')
    elif platform.system() == 'Darwin':
        widget.xview_scroll(-1*int(event.delta), 'units')
    else:
        if event.num == 4:
            widget.xview_scroll(-1, 'units')
        elif event.num == 5:
            widget.xview_scroll(1, 'units')

if __name__ == '__main__':
    vp_start_gui()






#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Aug 22, 2020 09:25:28 PM CEST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global combobox
    combobox = tk.StringVar()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def abortSkript():
    print('Cell_control3_support.abortSkript')
    sys.stdout.flush()

def bepT1():
    print('Cell_control3_support.bepT1')
    sys.stdout.flush()

def bepT2():
    print('Cell_control3_support.bepT2')
    sys.stdout.flush()

def bepT3():
    print('Cell_control3_support.bepT3')
    sys.stdout.flush()

def bepT4():
    print('Cell_control3_support.bepT4')
    sys.stdout.flush()

def bepT5():
    print('Cell_control3_support.bepT5')
    sys.stdout.flush()

def bepT6():
    print('Cell_control3_support.bepT6')
    sys.stdout.flush()

def calibS1():
    print('Cell_control3_support.calibS1')
    sys.stdout.flush()

def calibS2():
    print('Cell_control3_support.calibS2')
    sys.stdout.flush()

def calibS3():
    print('Cell_control3_support.calibS3')
    sys.stdout.flush()

def calibS4():
    print('Cell_control3_support.calibS4')
    sys.stdout.flush()

def calibS5():
    print('Cell_control3_support.calibS5')
    sys.stdout.flush()

def calibS6():
    print('Cell_control3_support.calibS6')
    sys.stdout.flush()

def closeS1():
    print('Cell_control3_support.closeS1')
    sys.stdout.flush()

def closeS2():
    print('Cell_control3_support.closeS2')
    sys.stdout.flush()

def closeS3():
    print('Cell_control3_support.closeS3')
    sys.stdout.flush()

def closeS4():
    print('Cell_control3_support.closeS4')
    sys.stdout.flush()

def closeS5():
    print('Cell_control3_support.closeS5')
    sys.stdout.flush()

def closeS6():
    print('Cell_control3_support.closeS6')
    sys.stdout.flush()

def endLogging():
    print('Cell_control3_support.endLogging')
    sys.stdout.flush()

def enterInput():
    print('Cell_control3_support.enterInput')
    sys.stdout.flush()

def loadSkript():
    print('Cell_control3_support.loadSkript')
    sys.stdout.flush()

def openS1():
    print('Cell_control3_support.openS1')
    sys.stdout.flush()

def openS2():
    print('Cell_control3_support.openS2')
    sys.stdout.flush()

def openS3():
    print('Cell_control3_support.openS3')
    sys.stdout.flush()

def openS4():
    print('Cell_control3_support.openS4')
    sys.stdout.flush()

def openS5():
    print('Cell_control3_support.openS5')
    sys.stdout.flush()

def openS6():
    print('Cell_control3_support.openS6')
    sys.stdout.flush()

def pauseSkript():
    print('Cell_control3_support.pauseSkript')
    sys.stdout.flush()

def rampS4():
    print('Cell_control3_support.rampS4')
    sys.stdout.flush()

def rampT1():
    print('Cell_control3_support.rampT1')
    sys.stdout.flush()

def rampT2():
    print('Cell_control3_support.rampT2')
    sys.stdout.flush()

def rampT3():
    print('Cell_control3_support.rampT3')
    sys.stdout.flush()

def rampT5():
    print('Cell_control3_support.rampT5')
    sys.stdout.flush()

def rampT6():
    print('Cell_control3_support.rampT6')
    sys.stdout.flush()

def runSkript():
    print('Cell_control3_support.runSkript')
    sys.stdout.flush()

def selectGraphEntries():
    print('Cell_control3_support.selectGraphEntries')
    sys.stdout.flush()

def selectSkriptPath():
    print('Cell_control3_support.selectSkriptPath')
    sys.stdout.flush()

def setS1():
    print('Cell_control3_support.setS1')
    sys.stdout.flush()

def setS2():
    print('Cell_control3_support.setS2')
    sys.stdout.flush()

def setS3():
    print('Cell_control3_support.setS3')
    sys.stdout.flush()

def setS4():
    print('Cell_control3_support.setS4')
    sys.stdout.flush()

def setS5():
    print('Cell_control3_support.setS5')
    sys.stdout.flush()

def setS6():
    print('Cell_control3_support.setS6')
    sys.stdout.flush()

def setT1():
    print('Cell_control3_support.setT1')
    sys.stdout.flush()

def setT2():
    print('Cell_control3_support.setT2')
    sys.stdout.flush()

def setT3():
    print('Cell_control3_support.setT3')
    sys.stdout.flush()

def setT4():
    print('Cell_control3_support.setT4')
    sys.stdout.flush()

def setT5():
    print('Cell_control3_support.setT5')
    sys.stdout.flush()

def setT6():
    print('Cell_control3_support.setT6')
    sys.stdout.flush()

def startLog():
    print('Cell_control3_support.startLog')
    sys.stdout.flush()

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import Cell_control3
    Cell_control3.vp_start_gui()





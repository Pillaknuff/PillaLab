#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Mar 20, 2020 02:41:24 PM CET  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import Mapping2_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    Mapping2_support.set_Tk_var()
    top = Toplevel1 (root)
    Mapping2_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    Mapping2_support.set_Tk_var()
    top = Toplevel1 (w)
    Mapping2_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("582x349+593+145")
        top.minsize(120, 1)
        top.maxsize(3844, 1061)
        top.resizable(1, 1)
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.017, rely=0.029, height=51, width=144)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Comic Sans MS} -size 16")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Mr Map''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.052, rely=0.258, height=39, width=25)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font="-family {Comic Sans MS} -size 12")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''x''')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Label2_4 = tk.Label(top)
        self.Label2_4.place(relx=0.052, rely=0.372, height=39, width=25)
        self.Label2_4.configure(activebackground="#f9f9f9")
        self.Label2_4.configure(activeforeground="black")
        self.Label2_4.configure(background="#d9d9d9")
        self.Label2_4.configure(disabledforeground="#a3a3a3")
        self.Label2_4.configure(font="-family {Comic Sans MS} -size 12")
        self.Label2_4.configure(foreground="#000000")
        self.Label2_4.configure(highlightbackground="#d9d9d9")
        self.Label2_4.configure(highlightcolor="black")
        self.Label2_4.configure(text='''y''')

        self.Label2_5 = tk.Label(top)
        self.Label2_5.place(relx=0.052, rely=0.487, height=39, width=25)
        self.Label2_5.configure(activebackground="#f9f9f9")
        self.Label2_5.configure(activeforeground="black")
        self.Label2_5.configure(background="#d9d9d9")
        self.Label2_5.configure(disabledforeground="#a3a3a3")
        self.Label2_5.configure(font="-family {Comic Sans MS} -size 12")
        self.Label2_5.configure(foreground="#000000")
        self.Label2_5.configure(highlightbackground="#d9d9d9")
        self.Label2_5.configure(highlightcolor="black")
        self.Label2_5.configure(text='''z''')

        self.Label2_6 = tk.Label(top)
        self.Label2_6.place(relx=0.017, rely=0.602, height=39, width=45)
        self.Label2_6.configure(activebackground="#f9f9f9")
        self.Label2_6.configure(activeforeground="black")
        self.Label2_6.configure(background="#d9d9d9")
        self.Label2_6.configure(disabledforeground="#a3a3a3")
        self.Label2_6.configure(font="-family {Comic Sans MS} -size 12")
        self.Label2_6.configure(foreground="#000000")
        self.Label2_6.configure(highlightbackground="#d9d9d9")
        self.Label2_6.configure(highlightcolor="black")
        self.Label2_6.configure(text='''theta''')

        self.xCombo = ttk.Combobox(top)
        self.xCombo.place(relx=0.12, rely=0.287, relheight=0.06, relwidth=0.125)
        self.value_list = ['fix','follow','map',]
        self.xCombo.configure(values=self.value_list)
        self.xCombo.configure(textvariable=Mapping2_support.combobox_x)
        updateGUI = self.xCombo.register(Mapping2_support.updateGUI)
        self.xCombo.configure(validatecommand=(updateGUI))
        self.xCombo.configure(takefocus="")

        self.yCombo = ttk.Combobox(top)
        self.yCombo.place(relx=0.12, rely=0.401, relheight=0.06, relwidth=0.125)
        self.value_list = ['fix','follow','map',]
        self.yCombo.configure(values=self.value_list)
        self.yCombo.configure(textvariable=Mapping2_support.combobox_y)
        updateGUI = self.yCombo.register(Mapping2_support.updateGUI)
        self.yCombo.configure(validatecommand=(updateGUI))
        self.yCombo.configure(takefocus="")

        self.zCombo = ttk.Combobox(top)
        self.zCombo.place(relx=0.12, rely=0.516, relheight=0.06, relwidth=0.125)
        self.value_list = ['fix','follow','map',]
        self.zCombo.configure(values=self.value_list)
        self.zCombo.configure(textvariable=Mapping2_support.combobox_z)
        updateGUI = self.zCombo.register(Mapping2_support.updateGUI)
        self.zCombo.configure(validatecommand=(updateGUI))
        self.zCombo.configure(takefocus="")

        self.tCombo = ttk.Combobox(top)
        self.tCombo.place(relx=0.12, rely=0.63, relheight=0.06, relwidth=0.125)
        self.value_list = ['fix','follow','map',]
        self.tCombo.configure(values=self.value_list)
        self.tCombo.configure(textvariable=Mapping2_support.combobox_th)
        updateGUI = self.tCombo.register(Mapping2_support.updateGUI)
        self.tCombo.configure(validatecommand=(updateGUI))
        self.tCombo.configure(takefocus="")

        self.Label2_15 = tk.Label(top)
        self.Label2_15.place(relx=0.292, rely=0.172, height=39, width=45)
        self.Label2_15.configure(activebackground="#f9f9f9")
        self.Label2_15.configure(activeforeground="black")
        self.Label2_15.configure(background="#d9d9d9")
        self.Label2_15.configure(disabledforeground="#a3a3a3")
        self.Label2_15.configure(font="-family {Comic Sans MS} -size 12")
        self.Label2_15.configure(foreground="#000000")
        self.Label2_15.configure(highlightbackground="#d9d9d9")
        self.Label2_15.configure(highlightcolor="black")
        self.Label2_15.configure(text='''start''')

        self.Label2_16 = tk.Label(top)
        self.Label2_16.place(relx=0.43, rely=0.172, height=39, width=45)
        self.Label2_16.configure(activebackground="#f9f9f9")
        self.Label2_16.configure(activeforeground="black")
        self.Label2_16.configure(background="#d9d9d9")
        self.Label2_16.configure(disabledforeground="#a3a3a3")
        self.Label2_16.configure(font="-family {Comic Sans MS} -size 12")
        self.Label2_16.configure(foreground="#000000")
        self.Label2_16.configure(highlightbackground="#d9d9d9")
        self.Label2_16.configure(highlightcolor="black")
        self.Label2_16.configure(text='''step''')

        self.Label2_1 = tk.Label(top)
        self.Label2_1.place(relx=0.567, rely=0.172, height=39, width=45)
        self.Label2_1.configure(activebackground="#f9f9f9")
        self.Label2_1.configure(activeforeground="black")
        self.Label2_1.configure(background="#d9d9d9")
        self.Label2_1.configure(disabledforeground="#a3a3a3")
        self.Label2_1.configure(font="-family {Comic Sans MS} -size 12")
        self.Label2_1.configure(foreground="#000000")
        self.Label2_1.configure(highlightbackground="#d9d9d9")
        self.Label2_1.configure(highlightcolor="black")
        self.Label2_1.configure(text='''end''')

        self.Label2_17 = tk.Label(top)
        self.Label2_17.place(relx=0.687, rely=0.172, height=39, width=45)
        self.Label2_17.configure(activebackground="#f9f9f9")
        self.Label2_17.configure(activeforeground="black")
        self.Label2_17.configure(background="#d9d9d9")
        self.Label2_17.configure(disabledforeground="#a3a3a3")
        self.Label2_17.configure(font="-family {Comic Sans MS} -size 12")
        self.Label2_17.configure(foreground="#000000")
        self.Label2_17.configure(highlightbackground="#d9d9d9")
        self.Label2_17.configure(highlightcolor="black")
        self.Label2_17.configure(text='''N''')

        self.Start = tk.Button(top)
        self.Start.place(relx=0.859, rely=0.287, height=24, width=35)
        self.Start.configure(activebackground="#ececec")
        self.Start.configure(activeforeground="#000000")
        self.Start.configure(background="#5f5f5f")
        self.Start.configure(command=Mapping2_support.StartMap)
        self.Start.configure(disabledforeground="#a3a3a3")
        self.Start.configure(foreground="#000000")
        self.Start.configure(highlightbackground="#d9d9d9")
        self.Start.configure(highlightcolor="black")
        self.Start.configure(pady="0")
        self.Start.configure(text='''Start''')

        self.Label2_18 = tk.Label(top)
        self.Label2_18.place(relx=0.584, rely=0.716, height=39, width=45)
        self.Label2_18.configure(activebackground="#f9f9f9")
        self.Label2_18.configure(activeforeground="black")
        self.Label2_18.configure(background="#d9d9d9")
        self.Label2_18.configure(disabledforeground="#a3a3a3")
        self.Label2_18.configure(font="-family {Comic Sans MS} -size 12")
        self.Label2_18.configure(foreground="#000000")
        self.Label2_18.configure(highlightbackground="#d9d9d9")
        self.Label2_18.configure(highlightcolor="black")
        self.Label2_18.configure(text='''Sum''')

        self.startx = tk.Entry(top)
        self.startx.place(relx=0.275, rely=0.287,height=20, relwidth=0.11)
        self.startx.configure(background="white")
        self.startx.configure(disabledforeground="#a3a3a3")
        self.startx.configure(font="TkFixedFont")
        self.startx.configure(foreground="#000000")
        self.startx.configure(highlightbackground="#d9d9d9")
        self.startx.configure(highlightcolor="black")
        self.startx.configure(insertbackground="black")
        self.startx.configure(selectbackground="#c4c4c4")
        self.startx.configure(selectforeground="black")
        self.startx.configure(textvariable=Mapping2_support.start_x)
        self.startx.configure(validate="focusout")
        updateGUI = self.startx.register(Mapping2_support.updateGUI)
        self.startx.configure(validatecommand=(updateGUI))

        self.stepx = tk.Entry(top)
        self.stepx.place(relx=0.412, rely=0.287,height=20, relwidth=0.11)
        self.stepx.configure(background="white")
        self.stepx.configure(disabledforeground="#a3a3a3")
        self.stepx.configure(font="TkFixedFont")
        self.stepx.configure(foreground="#000000")
        self.stepx.configure(highlightbackground="#d9d9d9")
        self.stepx.configure(highlightcolor="black")
        self.stepx.configure(insertbackground="black")
        self.stepx.configure(selectbackground="#c4c4c4")
        self.stepx.configure(selectforeground="black")
        self.stepx.configure(textvariable=Mapping2_support.step_x)
        self.stepx.configure(validate="focusout")
        updateGUI = self.stepx.register(Mapping2_support.updateGUI)
        self.stepx.configure(validatecommand=(updateGUI))

        self.endx = tk.Entry(top)
        self.endx.place(relx=0.55, rely=0.287,height=20, relwidth=0.11)
        self.endx.configure(background="white")
        self.endx.configure(disabledforeground="#a3a3a3")
        self.endx.configure(font="TkFixedFont")
        self.endx.configure(foreground="#000000")
        self.endx.configure(highlightbackground="#d9d9d9")
        self.endx.configure(highlightcolor="black")
        self.endx.configure(insertbackground="black")
        self.endx.configure(selectbackground="#c4c4c4")
        self.endx.configure(selectforeground="black")
        self.endx.configure(textvariable=Mapping2_support.end_x)
        self.endx.configure(validate="focusout")
        updateGUI = self.endx.register(Mapping2_support.updateGUI)
        self.endx.configure(validatecommand=(updateGUI))

        self.Nx = tk.Entry(top)
        self.Nx.place(relx=0.687, rely=0.287,height=20, relwidth=0.11)
        self.Nx.configure(background="white")
        self.Nx.configure(disabledforeground="#a3a3a3")
        self.Nx.configure(font="TkFixedFont")
        self.Nx.configure(foreground="#000000")
        self.Nx.configure(highlightbackground="#d9d9d9")
        self.Nx.configure(highlightcolor="black")
        self.Nx.configure(insertbackground="black")
        self.Nx.configure(selectbackground="#c4c4c4")
        self.Nx.configure(selectforeground="black")
        self.Nx.configure(textvariable=Mapping2_support.N_x)
        self.Nx.configure(validate="focusout")
        updateGUIN = self.Nx.register(Mapping2_support.updateGUIN)
        self.Nx.configure(validatecommand=(updateGUIN))

        self.starty = tk.Entry(top)
        self.starty.place(relx=0.275, rely=0.401,height=20, relwidth=0.11)
        self.starty.configure(background="white")
        self.starty.configure(disabledforeground="#a3a3a3")
        self.starty.configure(font="TkFixedFont")
        self.starty.configure(foreground="#000000")
        self.starty.configure(highlightbackground="#d9d9d9")
        self.starty.configure(highlightcolor="black")
        self.starty.configure(insertbackground="black")
        self.starty.configure(selectbackground="#c4c4c4")
        self.starty.configure(selectforeground="black")
        self.starty.configure(textvariable=Mapping2_support.start_y)
        self.starty.configure(validate="focusout")
        updateGUI = self.starty.register(Mapping2_support.updateGUI)
        self.starty.configure(validatecommand=(updateGUI))

        self.stepy = tk.Entry(top)
        self.stepy.place(relx=0.412, rely=0.401,height=20, relwidth=0.11)
        self.stepy.configure(background="white")
        self.stepy.configure(disabledforeground="#a3a3a3")
        self.stepy.configure(font="TkFixedFont")
        self.stepy.configure(foreground="#000000")
        self.stepy.configure(highlightbackground="#d9d9d9")
        self.stepy.configure(highlightcolor="black")
        self.stepy.configure(insertbackground="black")
        self.stepy.configure(selectbackground="#c4c4c4")
        self.stepy.configure(selectforeground="black")
        self.stepy.configure(textvariable=Mapping2_support.step_y)
        self.stepy.configure(validate="focusout")
        updateGUI = self.stepy.register(Mapping2_support.updateGUI)
        self.stepy.configure(validatecommand=(updateGUI))

        self.endy = tk.Entry(top)
        self.endy.place(relx=0.55, rely=0.401,height=20, relwidth=0.11)
        self.endy.configure(background="white")
        self.endy.configure(disabledforeground="#a3a3a3")
        self.endy.configure(font="TkFixedFont")
        self.endy.configure(foreground="#000000")
        self.endy.configure(highlightbackground="#d9d9d9")
        self.endy.configure(highlightcolor="black")
        self.endy.configure(insertbackground="black")
        self.endy.configure(selectbackground="#c4c4c4")
        self.endy.configure(selectforeground="black")
        self.endy.configure(textvariable=Mapping2_support.end_y)
        self.endy.configure(validate="focusout")
        updateGUI = self.endy.register(Mapping2_support.updateGUI)
        self.endy.configure(validatecommand=(updateGUI))

        self.Ny = tk.Entry(top)
        self.Ny.place(relx=0.687, rely=0.401,height=20, relwidth=0.11)
        self.Ny.configure(background="white")
        self.Ny.configure(disabledforeground="#a3a3a3")
        self.Ny.configure(font="TkFixedFont")
        self.Ny.configure(foreground="#000000")
        self.Ny.configure(highlightbackground="#d9d9d9")
        self.Ny.configure(highlightcolor="black")
        self.Ny.configure(insertbackground="black")
        self.Ny.configure(selectbackground="#c4c4c4")
        self.Ny.configure(selectforeground="black")
        self.Ny.configure(textvariable=Mapping2_support.N_y)
        self.Ny.configure(validate="focusout")
        updateGUIN = self.Ny.register(Mapping2_support.updateGUIN)
        self.Ny.configure(validatecommand=(updateGUIN))

        self.Nz = tk.Entry(top)
        self.Nz.place(relx=0.687, rely=0.516,height=20, relwidth=0.11)
        self.Nz.configure(background="white")
        self.Nz.configure(disabledforeground="#a3a3a3")
        self.Nz.configure(font="TkFixedFont")
        self.Nz.configure(foreground="#000000")
        self.Nz.configure(highlightbackground="#d9d9d9")
        self.Nz.configure(highlightcolor="black")
        self.Nz.configure(insertbackground="black")
        self.Nz.configure(selectbackground="#c4c4c4")
        self.Nz.configure(selectforeground="black")
        self.Nz.configure(textvariable=Mapping2_support.N_z)
        self.Nz.configure(validate="focusout")
        updateGUIN = self.Nz.register(Mapping2_support.updateGUIN)
        self.Nz.configure(validatecommand=(updateGUIN))

        self.endz = tk.Entry(top)
        self.endz.place(relx=0.55, rely=0.516,height=20, relwidth=0.11)
        self.endz.configure(background="white")
        self.endz.configure(disabledforeground="#a3a3a3")
        self.endz.configure(font="TkFixedFont")
        self.endz.configure(foreground="#000000")
        self.endz.configure(highlightbackground="#d9d9d9")
        self.endz.configure(highlightcolor="black")
        self.endz.configure(insertbackground="black")
        self.endz.configure(selectbackground="#c4c4c4")
        self.endz.configure(selectforeground="black")
        self.endz.configure(textvariable=Mapping2_support.end_z)
        self.endz.configure(validate="focusout")
        updateGUI = self.endz.register(Mapping2_support.updateGUI)
        self.endz.configure(validatecommand=(updateGUI))

        self.stepz = tk.Entry(top)
        self.stepz.place(relx=0.412, rely=0.516,height=20, relwidth=0.11)
        self.stepz.configure(background="white")
        self.stepz.configure(disabledforeground="#a3a3a3")
        self.stepz.configure(font="TkFixedFont")
        self.stepz.configure(foreground="#000000")
        self.stepz.configure(highlightbackground="#d9d9d9")
        self.stepz.configure(highlightcolor="black")
        self.stepz.configure(insertbackground="black")
        self.stepz.configure(selectbackground="#c4c4c4")
        self.stepz.configure(selectforeground="black")
        self.stepz.configure(textvariable=Mapping2_support.step_z)
        self.stepz.configure(validate="focusout")
        updateGUI = self.stepz.register(Mapping2_support.updateGUI)
        self.stepz.configure(validatecommand=(updateGUI))

        self.startz = tk.Entry(top)
        self.startz.place(relx=0.275, rely=0.516,height=20, relwidth=0.11)
        self.startz.configure(background="white")
        self.startz.configure(disabledforeground="#a3a3a3")
        self.startz.configure(font="TkFixedFont")
        self.startz.configure(foreground="#000000")
        self.startz.configure(highlightbackground="#d9d9d9")
        self.startz.configure(highlightcolor="black")
        self.startz.configure(insertbackground="black")
        self.startz.configure(selectbackground="#c4c4c4")
        self.startz.configure(selectforeground="black")
        self.startz.configure(textvariable=Mapping2_support.start_z)
        self.startz.configure(validate="focusout")
        updateGUI = self.startz.register(Mapping2_support.updateGUI)
        self.startz.configure(validatecommand=(updateGUI))

        self.startt = tk.Entry(top)
        self.startt.place(relx=0.275, rely=0.63,height=20, relwidth=0.11)
        self.startt.configure(background="white")
        self.startt.configure(disabledforeground="#a3a3a3")
        self.startt.configure(font="TkFixedFont")
        self.startt.configure(foreground="#000000")
        self.startt.configure(highlightbackground="#d9d9d9")
        self.startt.configure(highlightcolor="black")
        self.startt.configure(insertbackground="black")
        self.startt.configure(selectbackground="#c4c4c4")
        self.startt.configure(selectforeground="black")
        self.startt.configure(textvariable=Mapping2_support.start_t)
        self.startt.configure(validate="focusout")
        updateGUI = self.startt.register(Mapping2_support.updateGUI)
        self.startt.configure(validatecommand=(updateGUI))

        self.stept = tk.Entry(top)
        self.stept.place(relx=0.412, rely=0.63,height=20, relwidth=0.11)
        self.stept.configure(background="white")
        self.stept.configure(disabledforeground="#a3a3a3")
        self.stept.configure(font="TkFixedFont")
        self.stept.configure(foreground="#000000")
        self.stept.configure(highlightbackground="#d9d9d9")
        self.stept.configure(highlightcolor="black")
        self.stept.configure(insertbackground="black")
        self.stept.configure(selectbackground="#c4c4c4")
        self.stept.configure(selectforeground="black")
        self.stept.configure(textvariable=Mapping2_support.step_t)
        self.stept.configure(validate="focusout")
        updateGUI = self.stept.register(Mapping2_support.updateGUI)
        self.stept.configure(validatecommand=(updateGUI))

        self.endt = tk.Entry(top)
        self.endt.place(relx=0.55, rely=0.63,height=20, relwidth=0.11)
        self.endt.configure(background="white")
        self.endt.configure(disabledforeground="#a3a3a3")
        self.endt.configure(font="TkFixedFont")
        self.endt.configure(foreground="#000000")
        self.endt.configure(highlightbackground="#d9d9d9")
        self.endt.configure(highlightcolor="black")
        self.endt.configure(insertbackground="black")
        self.endt.configure(selectbackground="#c4c4c4")
        self.endt.configure(selectforeground="black")
        self.endt.configure(textvariable=Mapping2_support.end_t)
        self.endt.configure(validate="focusout")
        updateGUI = self.endt.register(Mapping2_support.updateGUI)
        self.endt.configure(validatecommand=(updateGUI))

        self.Nt = tk.Entry(top)
        self.Nt.place(relx=0.687, rely=0.63,height=20, relwidth=0.11)
        self.Nt.configure(background="white")
        self.Nt.configure(disabledforeground="#a3a3a3")
        self.Nt.configure(font="TkFixedFont")
        self.Nt.configure(foreground="#000000")
        self.Nt.configure(highlightbackground="#d9d9d9")
        self.Nt.configure(highlightcolor="black")
        self.Nt.configure(insertbackground="black")
        self.Nt.configure(selectbackground="#c4c4c4")
        self.Nt.configure(selectforeground="black")
        self.Nt.configure(textvariable=Mapping2_support.N_t)
        self.Nt.configure(validate="focusout")
        updateGUIN = self.Nt.register(Mapping2_support.updateGUIN)
        self.Nt.configure(validatecommand=(updateGUIN))

        self.Sum = tk.Entry(top)
        self.Sum.place(relx=0.687, rely=0.745,height=20, relwidth=0.11)
        self.Sum.configure(background="white")
        self.Sum.configure(disabledforeground="#a3a3a3")
        self.Sum.configure(font="TkFixedFont")
        self.Sum.configure(foreground="#000000")
        self.Sum.configure(highlightbackground="#d9d9d9")
        self.Sum.configure(highlightcolor="black")
        self.Sum.configure(insertbackground="black")
        self.Sum.configure(selectbackground="#c4c4c4")
        self.Sum.configure(selectforeground="black")
        self.Sum.configure(textvariable=Mapping2_support.Sum)
        self.Sum.configure(validate="focusout")
        updateGUI = self.Sum.register(Mapping2_support.updateGUI)
        self.Sum.configure(validatecommand=(updateGUI))

        self.Pause = tk.Button(top)
        self.Pause.place(relx=0.859, rely=0.401, height=24, width=35)
        self.Pause.configure(activebackground="#ececec")
        self.Pause.configure(activeforeground="#000000")
        self.Pause.configure(background="#5f5f5f")
        self.Pause.configure(command=Mapping2_support.PauseMap)
        self.Pause.configure(disabledforeground="#a3a3a3")
        self.Pause.configure(foreground="#000000")
        self.Pause.configure(highlightbackground="#d9d9d9")
        self.Pause.configure(highlightcolor="black")
        self.Pause.configure(pady="0")
        self.Pause.configure(text='''Pause''')

        self.Pause_23 = tk.Button(top)
        self.Pause_23.place(relx=0.859, rely=0.516, height=34, width=35)
        self.Pause_23.configure(activebackground="#ececec")
        self.Pause_23.configure(activeforeground="#000000")
        self.Pause_23.configure(background="#ff0000")
        self.Pause_23.configure(command=Mapping2_support.AbortMap)
        self.Pause_23.configure(disabledforeground="#a3a3a3")
        self.Pause_23.configure(foreground="#000000")
        self.Pause_23.configure(highlightbackground="#d9d9d9")
        self.Pause_23.configure(highlightcolor="black")
        self.Pause_23.configure(pady="0")
        self.Pause_23.configure(text='''STOP''')

        self.FolderPath = tk.Entry(top)
        self.FolderPath.place(relx=0.155, rely=0.888,height=20, relwidth=0.625)
        self.FolderPath.configure(background="white")
        self.FolderPath.configure(disabledforeground="#a3a3a3")
        self.FolderPath.configure(font="TkFixedFont")
        self.FolderPath.configure(foreground="#000000")
        self.FolderPath.configure(highlightbackground="#d9d9d9")
        self.FolderPath.configure(highlightcolor="black")
        self.FolderPath.configure(insertbackground="black")
        self.FolderPath.configure(selectbackground="#c4c4c4")
        self.FolderPath.configure(selectforeground="black")
        self.FolderPath.configure(textvariable=Mapping2_support.folderpath)

        self.Label2_2 = tk.Label(top)
        self.Label2_2.place(relx=0.052, rely=0.86, height=39, width=55)
        self.Label2_2.configure(activebackground="#f9f9f9")
        self.Label2_2.configure(activeforeground="black")
        self.Label2_2.configure(background="#d9d9d9")
        self.Label2_2.configure(disabledforeground="#a3a3a3")
        self.Label2_2.configure(font="-family {Comic Sans MS} -size 12")
        self.Label2_2.configure(foreground="#000000")
        self.Label2_2.configure(highlightbackground="#d9d9d9")
        self.Label2_2.configure(highlightcolor="black")
        self.Label2_2.configure(text='''Folder''')

        self.getFolder = tk.Button(top)
        self.getFolder.place(relx=0.79, rely=0.888, height=24, width=35)
        self.getFolder.configure(activebackground="#ececec")
        self.getFolder.configure(activeforeground="#000000")
        self.getFolder.configure(background="#5f5f5f")
        self.getFolder.configure(command=Mapping2_support.CallFolderGrabber)
        self.getFolder.configure(disabledforeground="#a3a3a3")
        self.getFolder.configure(foreground="#000000")
        self.getFolder.configure(highlightbackground="#d9d9d9")
        self.getFolder.configure(highlightcolor="black")
        self.getFolder.configure(pady="0")
        self.getFolder.configure(text='''get''')

        self.Label2_8 = tk.Label(top)
        self.Label2_8.place(relx=0.876, rely=0.688, height=39, width=55)
        self.Label2_8.configure(activebackground="#f9f9f9")
        self.Label2_8.configure(activeforeground="black")
        self.Label2_8.configure(background="#d9d9d9")
        self.Label2_8.configure(disabledforeground="#a3a3a3")
        self.Label2_8.configure(font="-family {Comic Sans MS} -size 12")
        self.Label2_8.configure(foreground="#000000")
        self.Label2_8.configure(highlightbackground="#d9d9d9")
        self.Label2_8.configure(highlightcolor="black")
        self.Label2_8.configure(text='''Status''')

        self.Label2_9 = tk.Label(top)
        self.Label2_9.place(relx=0.876, rely=0.774, height=29, width=55)
        self.Label2_9.configure(activebackground="#f9f9f9")
        self.Label2_9.configure(activeforeground="black")
        self.Label2_9.configure(background="#d9d9d9")
        self.Label2_9.configure(disabledforeground="#a3a3a3")
        self.Label2_9.configure(font="-family {Comic Sans MS} -size 12")
        self.Label2_9.configure(foreground="#000000")
        self.Label2_9.configure(highlightbackground="#d9d9d9")
        self.Label2_9.configure(highlightcolor="black")
        self.Label2_9.configure(text='''ini''')

        self.mainAx = ttk.Combobox(top)
        self.mainAx.place(relx=0.412, rely=0.086, relheight=0.06, relwidth=0.057)

        self.value_list = ['t','x','y','z',]
        self.mainAx.configure(values=self.value_list)
        self.mainAx.configure(textvariable=Mapping2_support.main_ax)
        self.mainAx.configure(takefocus="")

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.292, rely=0.086, height=21, width=55)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''Main axis''')

        self.style.map('TCheckbutton',background=
            [('selected', _bgcolor), ('active', _ana2color)])
        self.RelMapChk = ttk.Checkbutton(top)
        self.RelMapChk.place(relx=0.137, rely=0.745, relwidth=0.21, relheight=0.0
                , height=21)
        self.RelMapChk.configure(variable=Mapping2_support.relative_mapping)
        self.RelMapChk.configure(takefocus="")
        self.RelMapChk.configure(text='''relative mapping''')

if __name__ == '__main__':
    vp_start_gui()






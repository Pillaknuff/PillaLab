#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Feb 17, 2020 01:49:39 PM CET  platform: Windows NT
#    Jul 20, 2020 12:27:10 AM CEST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global shutterAngle
    shutterAngle = tk.StringVar()
    global whichcell
    whichcell = tk.StringVar()
    global sampleposselect
    sampleposselect = tk.StringVar()

def AbortProgram():
    print('Cell_control2_support.AbortProgram')
    sys.stdout.flush()

def CallMenu():
    print('Cell_control2_support.CallMenu')
    sys.stdout.flush()

def CheckStatus():
    print('Cell_control2_support.CheckStatus')
    sys.stdout.flush()

def CloseS1():
    print('Cell_control2_support.CloseS1')
    sys.stdout.flush()

def CloseS2():
    print('Cell_control2_support.CloseS2')
    sys.stdout.flush()

def LoadProgram():
    print('Cell_control2_support.LoadProgram')
    sys.stdout.flush()
    #a short guide to the programming solution:
    #the imported module is a class with the methods
    # run(), pause(), stop()
    # first it is imported by feeding the controller class as a attribute of the controller, then it can be started
    path = w.Growthpath.get('1.0',tk.END)
    text = theController.import_moduleAndText(path)
    try:
        w.GrowthDisplay.delete('1.0', tk.END)
        w.GrowthDisplay.insert('1.0',text)
    except:
        print(text)
        sys.stdout.flush()

def OpenS1():
    print('Cell_control2_support.OpenS1')
    sys.stdout.flush()

def OpenS2():
    print('Cell_control2_support.OpenS2')
    sys.stdout.flush()

def PauseProgram():
    print('Cell_control2_support.PauseProgram')
    sys.stdout.flush()

def RunProgram():
    print('Cell_control2_support.RunProgram')
    sys.stdout.flush()
    theController.runProgram()

def SetT1():
    print('Cell_control2_support.SetT1')
    sys.stdout.flush()

def SetT2_1():
    print('Cell_control2_support.SetT2_1')
    sys.stdout.flush()

def SetT2_2():
    print('Cell_control2_support.SetT2_2')
    sys.stdout.flush()

def Shutter2Pos1():
    print('Cell_control2_support.Shutter2Pos1')
    sys.stdout.flush()

def Shutter2Pos2():
    print('Cell_control2_support.Shutter2Pos2')
    sys.stdout.flush()

def Shutter2Pos3():
    print('Cell_control2_support.Shutter2Pos3')
    sys.stdout.flush()

def getPath():
    print('Cell_control2_support.getPath')
    sys.stdout.flush()
    try:
        from tkinter import filedialog
    except:
        import tkFileDialog as filedialog
    file_path = filedialog.askopenfilename()
    w.Growthpath.delete('1.0', tk.END)
    w.Growthpath.insert('1.0',file_path)

def shutter2Pos4():
    print('Cell_control2_support.shutter2Pos4')
    sys.stdout.flush()

def startMainGUI(controlBackend): # main caller
    import Cell_control2
    global theController 
    theController= controlBackend #tell everybody about statemashine
    Cell_control2.vp_start_gui()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def MeasureBEP():
    print('Cell_control2_support.MeasureBEP')
    sys.stdout.flush()

def RampT1():
    print('Cell_control2_support.RampT1')
    sys.stdout.flush()

def RampT2():
    print('Cell_control2_support.RampT2')
    sys.stdout.flush()

def RampT3():
    print('Cell_control2_support.RampT3')
    sys.stdout.flush()

def RampT4():
    print('Cell_control2_support.RampT4')
    sys.stdout.flush()

def SetT2():
    print('Cell_control2_support.SetT2')
    sys.stdout.flush()

def SetT3():
    print('Cell_control2_support.SetT3')
    sys.stdout.flush()

def SetT4():
    print('Cell_control2_support.SetT4')
    sys.stdout.flush()

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import Cell_control2
    Cell_control2.vp_start_gui()





